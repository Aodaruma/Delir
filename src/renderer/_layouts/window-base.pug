doctype html
html
    head
        meta(charset="UTF-8")
        title Delir

        link(rel="stylesheet" type="text/css" href="styles/modal-common.css")
        script.
            (() => {
                const $ = window.$ = query => document.querySelector(query)
                const $$ = window.$$ = query => document.querySelectorAll(query)
                const {remote} = require('electron')
                const bw = window.thisWindow = remote.getCurrentWindow()
                const util = window.util = {
                    restoreValueToForm(obj)
                    {
                        const form = document.querySelector('#root')
                        for (const input of form.elements) {
                            if (obj[input.name]) input.value = obj[input.name]
                        }
                    }
                };

                bw.on('hide', e => bw.reload())

                window.addEventListener('DOMContentLoaded', () => {
                    if (bw.isModal()) {
                        $('.view-navigation').remove()
                    } else {
                        !bw.isClosable() && ($('.window-nav--close').setAttribute('disabled', ''))
                        !bw.isMinimizable() && ($('.window-nav--minimize').setAttribute('disabled', ''))
                        !bw.isMaximizable() && ($('.window-nav--maximize').setAttribute('disabled', ''))

                        $('.window-nav--close').addEventListener('click', e => bw.hide())
                        $('.window-nav--minimize').addEventListener('click', e => bw.minimize())
                        $('.window-nav--maximize').addEventListener('click', e => bw.isMaximized() ? bw.unmaximize() : bw.maximize())
                    }

                    window.addEventListener('submit', e => {
                        bw.hide()
                        setTimeout(() => bw.reload(), 1000)
                    })

                    $('.form-control input').addEventListener('focus', e => e.target.select())

                    $('form :-webkit-any(button:not([type]),[type="submit"])').addEventListener('click', e => {
                        let alerted = false;

                        for (const el of e.target.form.elements) {
                            const closest = el.closest('.form-control');

                            if (! el.matches('input,textarea,select')) {
                                continue;
                            }

                            if (el.checkValidity()) {
                                closest.classList.remove('invalid');
                                closest.classList.remove('alert');
                                closest.dataset.message = null
                            } else {
                                closest.classList.add('invalid');
                                !alerted && (closest.dataset.message = el.validationMessage);
                                !alerted && closest.classList.add('alert');
                                alerted = true;
                            }
                        }
                    })
                })
            })()

        block script
    body
        form#root
            block shell
                .view-navigation
                    ul.window-nav
                        li.window-nav-item.window-nav--close
                        li.window-nav-item.window-nav--minimize
                        li.window-nav-item.window-nav--maximize

            block header

            block content

            block footer
